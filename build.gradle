plugins {
	id 'org.springframework.boot' version '2.7.5'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id 'java'
	id "jacoco"
	id "org.sonarqube" version "3.5.0.2730"
}

group = 'software.sigma.BU003.internship'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenLocal()

	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security:3.0.1'
	implementation 'org.springdoc:springdoc-openapi-ui:1.6.14'
	implementation 'org.flywaydb:flyway-mysql:9.11.0'
	implementation 'org.flywaydb:flyway-core:9.11.0'
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	implementation 'org.mapstruct:mapstruct:1.5.3.Final'
	implementation 'org.projectlombok:lombok-mapstruct-binding:0.2.0'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.3.Final'
	annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
	testImplementation 'com.squareup.okhttp3:mockwebserver:4.10.0'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
}

tasks.named('test') {
	useJUnitPlatform()
}

sonarqube {
	properties {
		property "sonar.projectKey", "vedmik_Sigma_internship_BU003"
		property "sonar.organization", "vedmik"
		property "sonar.host.url", "https://sonarcloud.io"
		property "sonar.coverage.exclusions", "**/entity/*.*, **/entity/**/*.*," +
				" **/config/*.*, **/config/**/*.*, **/exception/*.*, **/dto/**/*.*, **/model/*.*"
	}
}

test {
	finalizedBy jacocoTestReport
}
jacocoTestReport {
	dependsOn test
	reports {
		xml.required = true
	}
}
